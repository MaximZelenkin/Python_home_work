import re
import numpy

#
# 1.	Создайте вектор размером 10 с рандомными значениями, отсортируйте и выведите в консоль.


# print(numpy.sort(numpy.array([numpy.random.randint(10) for x in range(10)])))
#

# 2.	Создайте матрицу 8х8 состоящую из 1 и 0 и заполненную в шахматном порядке


# f_1 = lambda x: 0 / x if x % 2 == 0 else x / x
# f_2 = lambda x: x / x if x % 2 == 0 else 0 / x
#
#
# v_1 = [f_1(x) for x in range(1, 9)]
# v_2 = [f_2(x) for x in range(1, 9)]
#
#
# array_1 = numpy.array([v_1, v_2]*4)
# print(array_1)


# 3.	Создайте матрицы 8x4 и 4x2 и перемножьте, результирующую матрицу выведите в консоль.

# m_8_4 = numpy.full((8, 4), 4)
# # m_8_4 = numpy.array(range(8*4), int).reshape(8, 4)
# m_4_2 = numpy.full((4, 2), 2)
# print(numpy.dot(m_8_4, m_4_2))

# 4.	Создать вектор размера 10 со значениями от 0 до 1, не включая ни то, ни другое.

# print(sorted(numpy.random.random(10)))
# print(len(sorted(numpy.random.random(10))))

# 5.	Создайте функцию, которая
# a.	принимает число (количество элементов в матрице)
# b.	Проверяет можно ли построить матрицы с размерностью из множителей принимаемого числа.
# c.	При проверке не учитывать матрицы с множителем “1”
# d.	постройте все возможные матрицы и выведите в консоль.
# e.	если число нельзя разбить на множители без остатка выведите сообщение в консоль.

#
# def func_1(num_elements, )
